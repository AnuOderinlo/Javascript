{"mappings":"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","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst spinnerHTML = function (parentEl) {\n  const markup =  ` \n    <div class=\"spinner\">\n      <svg>\n        <use href=\"src/img/icons.svg#icon-loader\"></use>\n      </svg>\n    </div>\n    `\n    parentEl.innerHTML = \"\";\n\n    parentEl.insertAdjacentHTML('afterbegin', markup);\n\n    console.log(\"working\");\n}\n\nconst showRecipe = async function () {\n  // loading Recipe\n  try {\n\n    spinnerHTML(recipeContainer);\n\n    \n    const res = await fetch(\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n    );\n\n    const data = await res.json();\n\n    let {recipe} = data.data;\n\n    recipe = {\n      id: recipe.id,\n      image: recipe.image_url,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n      publisher: recipe.publisher,\n      servings: recipe.servings,\n      sourceUrl: recipe.source_url,\n      title: recipe.title\n    }\n    console.log(recipe);\n\n    const markup = `\n      <figure class=\"recipe__fig\">\n        <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n          <span class=\"recipe__info-text\">servings</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n\n          ${\n            recipe.ingredients.map(ing=> {\n              console.log(ing);\n              return `<li class=\"recipe__ingredient\">\n                <svg class=\"recipe__icon\">\n                  <use href=\"src/img/icons.svg#icon-check\"></use>\n                </svg>\n                <div class=\"recipe__quantity\">${ing.quantity?ing.quantity: ''}</div>\n                <div class=\"recipe__description\">\n                  <span class=\"recipe__unit\">${ing.unit}</span>\n                  ${ing.description}\n                </div>\n              </li>`\n            }).join('')\n          }\n\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceUrl}\"\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    \n    `;\n\n    recipeContainer.innerHTML = \"\";\n\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n\n\n    if (!res.ok) throw new Error (`${data.message} ${res.status}`);\n\n    // Rendering recipe\n\n    \n  } catch (err) {\n    alert(err)\n  }\n}\n\nshowRecipe();"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}